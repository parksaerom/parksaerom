proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream nextjs_upstream {
  server nextjs:3000;
}

upstream backend_upstream {
    server localhost:8080;
    # server backend-b:8081;
    # server backend-c:8082;
}

server {
	listen       80;
	listen  [::]:80;
	server_name  localhost;

	gzip on;
	gzip_proxied any;
	gzip_comp_level 4;
	gzip_types text/css application/javascript image/svg+xml;

	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection 'upgrade';
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;

	location / {
		proxy_pass http://nextjs_upstream;
	}

	location /_next/static {
		proxy_cache STATIC;
		proxy_pass http://nextjs_upstream;
  	}

	location /static {
		proxy_cache STATIC;
		proxy_ignore_headers Cache-Control;
		proxy_cache_valid 60m;
		proxy_pass http://nextjs_upstream;
	}

	location /api { # /api의 하위 호출은 localhost:8080으로 프록시 처리
		rewrite ^/api(.*)$ $1?$args break;
  		proxy_pass http:/backend_upstream;
		
		add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
	}

  	error_page   500 502 503 504  /50x.html;
	location = /50x.html {
		root   /usr/share/nginx/html;
	}

}
